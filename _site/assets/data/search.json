[
  
  {
    "title"    : "Interesting Points about Hooks in React",
    "category" : "javascript",
    "url"      : "/blog/javascript/2023/03/15/interesting-points-about-hooks-react/",
    "date"     : "March 15, 2023",
    "excerpt"  : "Hooks don’t replace your knowledge of React concepts. Instead, Hooks provide a more direct API to the React concepts you already know: props, state, context, refs, and lifecycle. As we will show later, Hooks also offer a new powerful way to combin...",
    "content"  : "Hooks don’t replace your knowledge of React concepts. Instead, Hooks provide a more direct API to the React concepts you already know: props, state, context, refs, and lifecycle. As we will show later, Hooks also offer a new powerful way to combine them.\n\n\n\nHooks allow you to reuse stateful logic without changing your component hierarchy.\n\nProblems with Class Components\nEach lifecycle method often contains a mix of unrelated logic. For example, components might perform some data fetching in componentDidMount and componentDidUpdate. However, the same componentDidMount method might also contain some unrelated logic that sets up event listeners, with cleanup performed in componentWillUnmount.\n\nMutually related code that changes together gets split apart, but completely unrelated code ends up combined in a single method. This makes it too easy to introduce bugs and inconsistencies.\n\nhttps://reactjs.org/docs/hooks-intro.html\n"
} ,
  
  {
    "title"    : "Comparing 2 Strings in JS, How would I do it?",
    "category" : "javascript",
    "url"      : "/blog/javascript/2022/02/17/comparing-two-strings/",
    "date"     : "February 17, 2022",
    "excerpt"  : "I watched this interesting video on youtube, about a codding assignement where you need to solve a logical problem in JS, and write a function that does some processing based on input data and needs to return the expected result, as it turns out t...",
    "content"  : "I watched this interesting video on youtube, about a codding assignement where you need to solve a logical problem in JS, and write a function that does some processing based on input data and needs to return the expected result, as it turns out this if very interesting for me to try and solve on my own, so in this post I’ll show my approach at this.\n\n\n\nComparing 2 Strings in JS, How would I do it?\nI watched this interesting video on youtube, about a codding assignement where you need to solve a logical problem in JS, and write a function that does some processing based on input data and needs to return the expected result, as it turns out this if very interesting for me to try and solve on my own, so in this post I’ll show my approach at this.\n\nThe Instructions\nCreate a function in JS that accepts 2 parameters, s1 and s2, which should be strings, and create some logic to create the longest common substring between them, while allowing any other characters as long as they don’t mess with the order of the longest common substring.\nExample input and output:\n\n// “DUSANTEST1” “CCTESTGSAG” =&amp;gt; “TEST”\n// “AGGTAB” “GXTXAYB” =&amp;gt; “GTAB”\n\n\nTry matching each letter\nMy first thought was that I should start by taking each letter in s1 and comparing it to all of the letters in s2.\n\nfunction getLongest(s1, s2) {\n// * go through each of the letters in S1 and try to find the same in S2, but avoid characters already found, avoid finding items that preceed the already found\nlet found = [];\nfor (let i = 0; i &amp;lt; s1.length; i++) {\n      // * find location in S2\n      let s2Found = s2.indexOf(s1[i]);\n      if (s2Found &amp;gt; -1) {\n        found.push(s1[i]);\n        s2 = s2.substr(s2Found + 1);\n      }\n    }\nreturn found.join(&#39;&#39;);\n};\nconsole.log(found); // we print what was found\n\n\nWhat I figured after I wrote my initial for loop, is that I don’t want to keep searching in the entire s2 string with every character in s1, as it would not help with duplicate matches and the order.\n\nSo if an s1 character is found in s2 we want to start counting our match from there and trim our s2 string so we don’t match the same character again.\n\nAnother loop\nSo the example above now works, but it doesn’t return the longest common substring, it only returns the first found substring.\n\nWe need a way to collect all possible combinations and compare which one is the longest. And because our current example basically starts from the first matched letter from s1, we need a way to test all letter combinations in s1 left to right, omitting incrementally.\n\nFiltering out duplicates\nFinding the longest\n\nThe complete function\n\nfunction getLongest(s1, s2) {\n  let collection = [];\n  let longest = &quot;&quot;;\n\n  for (let w = 0; w &amp;lt; s1.length; w++) {\n    let s1Search = s1.substr(w);\n\n    let s2Processing = s2;\n\n    let found = [];\n\n    // * go through each of the letters in S1 and try to find the same in S2, but avoid characters already found, avoid finding items that preceed the already found\n    for (let i = 0; i &amp;lt; s1Search.length; i++) {\n      // * find location in S2\n      let s2Found = s2Processing.indexOf(s1Search[i]);\n      if (s2Found &amp;gt; -1) {\n        found.push(s1Search[i]);\n        s2Processing = s2Processing.substr(s2Found + 1);\n      }\n    }\n\n    collection.push(found.join(&quot;&quot;));\n  }\n\n  const uniqueValues = [...new Set(collection)];\n\n  // go trough each of the items and count and write somewhere\n\n  uniqueValues.forEach((value) =&amp;gt; {\n    if (longest.length &amp;lt;= value.length) {\n      longest = value;\n    }\n  });\n\n  // feches unique items\n  return longest;\n}\n\nconsole.log(getLongest(&quot;aaaaabb&quot;, &quot;aaa&quot;));\n\n\nThe above solution might not be the most performant solution, but its the simplest I found.\n\nFinding the solution above took me quite some time, more than I expected initially. Not too proud to say that I had to look up what the substr() function actually returns, so you can say that I cheated a little, it’s all because the online code editor that I used didn’t have any code hinting.\n\nAny feedback is much appreciated.\n"
} ,
  
  {
    "title"    : "Hello World",
    "category" : "content, demo",
    "url"      : "/blog/content/demo/2021/07/15/hello-world/",
    "date"     : "July 15, 2021",
    "excerpt"  : "Hello and welcome. The only purpose of this post is to greet you when your site comes alive for the first time.\nThis post will demonstrate some of the more common content &amp;amp; elements found in posts.\nFeel free to delete this post when you are re...",
    "content"  : "Hello and welcome. The only purpose of this post is to greet you when your site comes alive for the first time.\nThis post will demonstrate some of the more common content &amp;amp; elements found in posts.\nFeel free to delete this post when you are ready to publish your first post.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit.\n\nSome great heading (h2)\n\nProin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu.\n&amp;lt;!–more–\n\nMauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\nAnother great heading (h2)\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit.\n\nSome great subheading (h3)\n\nProin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum.\n\nPhasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc.\n\nSome great subheading (h3)\n\nPraesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\n\n  This quote will change your life. It will reveal the secrets of the universe, and all the wonders of humanity. Don’t misuse it.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt.\n\nSome great subheading (h3)\n\nVestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit. Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum.\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nYou might want a sub-subheading (h4)\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nBut it’s probably overkill (h4)\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nCould be a smaller sub-heading, pacman (h5)\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nSmall yet significant sub-heading  (h6)\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nHighlight the code please!!\n\nfloat Q_rsqrt( float number )\n{\n\tlong i;\n\tfloat x2, y;\n\tconst float threehalfs = 1.5F;\n\n\tx2 = number * 0.5F;\n\ty  = number;\n\ti  = * ( long * ) &amp;amp;y;                       // evil floating point bit level hacking\n\ti  = 0x5f3759df - ( i &amp;gt;&amp;gt; 1 );               // what the fuck? \n\ty  = * ( float * ) &amp;amp;i;\n\ty  = y * ( threehalfs - ( x2 * y * y ) );   // 1st iteration\n//\ty  = y * ( threehalfs - ( x2 * y * y ) );   // 2nd iteration, this can be removed\n\n\treturn y;\n}\n\nOh hai, an unordered list!!\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\n\n  First item, yo\n  Second item, dawg\n  Third item, what what?!\n  Fourth item, fo sheezy my neezy\n\n\nOh hai, an ordered list!!\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\n\n  First item, yo\n  Second item, dawg\n  Third item, what what?!\n  Fourth item, fo sheezy my neezy\n\n\nHeadings are cool! (h2)\n\nProin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\nPraesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\nProin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc.\n\nTables\n\n\n  \n    \n      Title 1\n      Title 2\n      Title 3\n      Title 4\n    \n  \n  \n    \n      lorem\n      lorem ipsum\n      lorem ipsum dolor\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n    \n  \n\n\n\n  \n    \n      Title 1\n      Title 2\n      Title 3\n      Title 4\n    \n  \n  \n    \n      lorem\n      lorem ipsum\n      lorem ipsum dolor\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor sit amet\n      lorem ipsum dolor sit amet consectetur\n      lorem ipsum dolor sit amet\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor\n      lorem ipsum\n      lorem\n      lorem ipsum\n    \n    \n      lorem ipsum dolor\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit amet\n      lorem ipsum dolor sit amet consectetur\n    \n  \n\n"
} ,
  
  {
    "title"    : "Free Downtime Monitor Tool - How to Setup?",
    "category" : "bash, slack",
    "url"      : "/blog/bash/slack/2021/03/29/free-downtime-monitor-tool/",
    "date"     : "March 29, 2021",
    "excerpt"  : "There are more than a few services that provide various tools for monitoring your website’s uptime, but if you’re anything like me, meaning you don’t want to spend that much and you just want something simple that would notify you when your websit...",
    "content"  : "There are more than a few services that provide various tools for monitoring your website’s uptime, but if you’re anything like me, meaning you don’t want to spend that much and you just want something simple that would notify you when your website goes down, the following would be a perfect solution for you.\n\n\n\nThings you need to get this tool running\n\n–The website you’d like to monitor\n–Hosting account with SSH access (has to be separate from the one holding the website to monitor).\n–Slack workspace (basic is free).\n\nWhy we’re using Slack\n\nMy original approach was to just use regular emails for notification, but it has proven to be unreliable in terms of getting delivered on time and sometimes ending up in spam, which is not good if we want to be notified exactly when our website goes down.\n\nNow comes Slack, the good thing about this app is that it is completely free to set up a basic account, and you get a cross-platform solution, which is perfect to be able to get notified also via push notifications on your phone.\n\nFeatures in Slack that we are going to use for this use case are:\n\n–Private Channel ex: website_monitoring\n–Slack Webhooks\n\nSetting things up in Slack\n\nTo quickly get setup with a Slack Workspace go to this slack getting started page.\n\n\n\nYou only need to enter your existing email address along with some personal information to get set up. For a more comprehensive guide you can go the following blog post on slack.com.\n\nCreating a Channel and Enabling Webhooks\n\nCreating a new channel is easy enough by clicking on the add channels button in the left navigation area, a popup dialog like the following is going to show.\n\n\n\nI suggest making this new channel a private one, as we don’t want just anyone with workspace access to receive these notifications, its better if we control who has access to that.\n\nSetting up a monitor bash script\n\nThe next crucial step is enabling incoming Webhooks, this is needed to enable slack to receive the messages we’re sending from our monitoring server. A guide on how to enable webhooks in your slack workspace can be found on the official slack documentation site here.\n\nIn a non-public directory create a file that we will name downTimeMonitor.sh, this is the file that we will periodically run to check if the site is running fine. Add the following code to the new file:\n\n#!/bin/bash\n\nnotify_slack_message() {\nnow=$(date)\n\nlocal message=&quot;$1&quot;\n\ncurl -X POST --data-urlencode &quot;payload={\\&quot;channel\\&quot;: \\&quot;#website_monitoring\\&quot;, \\&quot;username\\&quot;: \\&quot;webhookbot\\&quot;, \\&quot;text\\&quot;: \\&quot;($message) YourWebsite.com homepage not responding, &amp;lt;@dusan&amp;gt; please check the website. Checked at - $now\\&quot;, \\&quot;icon_emoji\\&quot;: \\&quot;:ghost:\\&quot;}&quot; https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX\n\n}\n\n\nif curl -s &quot;https://yourwebsite.com/&quot; | grep -q &quot;Website Headline&quot;\nthen\n    # if the keyword is in the content\n    echo &quot; the website is working fine&quot; | notify_slack_message &quot;fine message&quot;\n\telse\n    echo &quot;Program Creek Error&quot; | notify_slack_message &quot;error message&quot; \nfi\n\n\n\nTo setup permissions, execute the following command in the folder where it was created:\n\nchmod +x downTimeMonitor.sh\n\n\n\nNow to make the above script work for your particular needs:\n\n\n  \n    Make sure to replace the following webhook endpoint URL with the one provided to you by Slack when enabling the feature.\n\n    \n      https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX\n    \n  \n  \n    Replace any references to https://yourwebsite.com/ with the URL that you’d like to monitor.\n  \n  \n    Update “Website Headline” to a line of text that you expect the site to render when properly loaded, this will serve as prof that the site has rendered correctly, signaling an OK, I prefer this approach better then just checking a response status code 200, as for example the site gets hacked and no longer returns our expected string but still sends a 200 response code.\n  \n\n\nMaking it run every 5 mins\n\nFirstly you can test if the script’s working actually by executing:\n\n ./downtimeMonitor.sh\n\n\nIf the site is up and running the script should return the “the website is working fine” message\n\nNow in order to make the script run every 5 minutes, we need to utilize the crontab in linux. To add commands we want to execute periodically, execute the following code to edit the crontab file:\n\nNow in order to make the script run every 5 minutes, we need to utilize the crontab in linux. To add commands we want to execute periodically, execute the following code to edit the crontab file:\n\n  crontab -e \n\n\nAppend the following line of code to the end of that crontab file:\n\n */5 * * * * /bin/bash -x /var/www/downtimeMonitor.sh\n\n\n\nThat’s pretty much it!\n\nNow you can intentionally bring your website down to test if you’ll get a downtime notification in your private channel, be sure to not do this while in peak hours of your website.\n\nI hope this was an useful little tip for anyone who wants to be notified when things go south.\n"
} 
  
]
